FROM node:18-alpine AS ui-builder

# Build the UI
WORKDIR /app/ui
COPY ui/package*.json ./
RUN npm ci
COPY ui/ ./
RUN npm run build

FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY api/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Install additional dependencies for PostgreSQL
RUN pip install psycopg2-binary pgvector

# Copy API code
COPY api/ ./

# Copy built UI
COPY --from=ui-builder /app/ui/dist ./static
COPY --from=ui-builder /app/ui/dist ./ui/dist

# Create startup script
COPY <<EOF startup.sh
#!/bin/bash

# Wait for database to be ready
echo "Waiting for database..."
python -c "
import psycopg2
import os
import time
import sys

max_retries = 30
for i in range(max_retries):
    try:
        conn = psycopg2.connect(os.environ['DATABASE_URL'])
        conn.close()
        print('Database is ready!')
        break
    except:
        if i == max_retries - 1:
            print('Database connection failed')
            sys.exit(1)
        time.sleep(2)
"

# Enable pgvector extension
python -c "
import psycopg2
import os

conn = psycopg2.connect(os.environ['DATABASE_URL'])
cur = conn.cursor()
cur.execute('CREATE EXTENSION IF NOT EXISTS vector;')
conn.commit()
conn.close()
print('pgvector extension enabled')
"

# Start the application
exec uvicorn main:app --host 0.0.0.0 --port \$PORT --workers 1
EOF

RUN chmod +x startup.sh

EXPOSE 8765

CMD ["./startup.sh"]
